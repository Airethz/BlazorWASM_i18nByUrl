@page "/fetchdata"
@inject HttpClient Http

<PageTitle>@localizer["Weather forecast"]</PageTitle>

<h1>@localizer["Weather forecast"]</h1>


@if (forecasts == null)
{
    <p><em>@localizer["Loading"]...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>@localizer["Date"]</th>
                <th>@localizer["Celsius"]</th>
                <th>@localizer["Fahrenheit"]</th>
                <th>@localizer["Summary"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
